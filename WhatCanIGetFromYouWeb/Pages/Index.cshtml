@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
@section HeadScripts
{
    <script language="javascript">

        // Original:  Netscape –>
        // Web Site:  http://www.netscape.com  –>

        // begin
        function is() {
            var agt = navigator.userAgent.toLowerCase()
            this.major = parseInt(navigator.appVersion)
            this.minor = parseFloat(navigator.appVersion)
            this.nav = ((agt.indexOf('mozilla') != -1) && ((agt.indexOf('spoofer') == -1)
                && (agt.indexOf('compatible') == -1)))
            this.nav2 = (this.nav && (this.major == 2))
            this.nav3 = (this.nav && (this.major == 3))
            this.nav4 = (this.nav && (this.major == 4))
            this.nav4up = this.nav && (this.major >= 4)
            this.navonly = (this.nav && (agt.indexOf(";nav") != -1))
            this.ie = (agt.indexOf("msie") != -1)
            this.ie3 = (this.ie && (this.major == 2))
            this.ie4 = (this.ie && (this.major == 4))
            this.ie4up = this.ie && (this.major >= 4)
            this.opera = (agt.indexOf("opera") != -1)
            if (this.nav2 || this.ie3) this.js = 1.0
            else if (this.nav3 || this.opera) this.js = 1.1
            else if (this.nav4 || this.ie4) this.js = 1.2
            else if ((this.nav && (this.minor > 4.05)) || (this.ie && (this.major > 4)))
                this.js = 1.2
            else this.js = 0.0
            this.win = ((agt.indexOf("win") != -1) || (agt.indexOf("16bit") != -1))
            this.win95 = ((agt.indexOf("win95") != -1) || (agt.indexOf("windows 95") != -1))
            this.win16 = ((agt.indexOf("win16") != -1)
                || (agt.indexOf("16bit") != -1) || (agt.indexOf("windows 3.1") != -1)
                || (agt.indexOf("windows 16-bit") != -1))

            this.win31 = (agt.indexOf("windows 3.1") != -1) || (agt.indexOf("win16") != -1) ||
                (agt.indexOf("windows 16-bit") != -1)
            this.win98 = ((agt.indexOf("win98") != -1) || (agt.indexOf("windows 98") != -1))
            this.winnt = ((agt.indexOf("winnt") != -1) || (agt.indexOf("windows nt") != -1))
            this.win32 = this.win95 || this.winnt || this.win98 ||
                ((this.major >= 4) && (navigator.platform == "win32")) ||
                (agt.indexOf("win32") != -1) || (agt.indexOf("32bit") != -1)
            this.os2 = (agt.indexOf("os/2") != -1)
                || (navigator.appVersion.indexOf("os/2") != -1)
                || (agt.indexOf("ibm-webexplorer") != -1)
            this.mac = (agt.indexOf("mac") != -1)
            this.mac68k = this.mac && ((agt.indexOf("68k") != -1) ||
                (agt.indexOf("68000") != -1))
            this.macppc = this.mac && ((agt.indexOf("ppc") != -1) ||
                (agt.indexOf("powerpc") != -1))
            this.sun = (agt.indexOf("sunos") != -1)
            this.sun4 = (agt.indexOf("sunos 4") != -1)
            this.sun5 = (agt.indexOf("sunos 5") != -1)
            this.suni86 = this.sun && (agt.indexOf("i86") != -1)
            this.irix = (agt.indexOf("irix") != -1)// sgi
            this.irix5 = (agt.indexOf("irix 5") != -1)
            this.irix6 = ((agt.indexOf("irix 6") != -1) || (agt.indexOf("irix6") != -1))
            this.hpux = (agt.indexOf("hp-ux") != -1)
            this.hpux9 = this.hpux && (agt.indexOf("09.") != -1)
            this.hpux10 = this.hpux && (agt.indexOf("10.") != -1)
            this.aix = (agt.indexOf("aix") != -1)  // ibm
            this.aix1 = (agt.indexOf("aix 1") != -1)
            this.aix2 = (agt.indexOf("aix 2") != -1)
            this.aix3 = (agt.indexOf("aix 3") != -1)
            this.aix4 = (agt.indexOf("aix 4") != -1)
            this.linux = (agt.indexOf("inux") != -1)
            this.sco = (agt.indexOf("sco") != -1) || (agt.indexOf("unix_sv") != -1)
            this.unixware = (agt.indexOf("unix_system_v") != -1)
            this.mpras = (agt.indexOf("ncr") != -1)
            this.reliant = (agt.indexOf("reliantunix") != -1)
            this.dec = (agt.indexOf("dec") != -1) || (agt.indexOf("osf1") != -1)
                || (agt.indexOf("dec_alpha") != -1) || (agt.indexOf("alphaserver") != -1)
                || (agt.indexOf("ultrix") != -1) || (agt.indexOf("alphastation") != -1)
            this.sinix = (agt.indexOf("sinix") != -1)
            this.freebsd = (agt.indexOf("freebsd") != -1)
            this.bsd = (agt.indexOf("bsd") != -1)
            this.unix = (agt.indexOf("x11") != -1) || this.sun || this.irix || this.hpux ||
                this.sco || this.unixware || this.mpras || this.reliant ||
                this.dec || this.sinix || this.aix || this.linux || this.freebsd
            this.vms = (agt.indexOf("vax") != -1) || (agt.indexOf("openvms") != -1)
        }
        var is;
        var isie3mac = false;
        if ((navigator.appVersion.indexOf("mac") != -1) && (navigator.userAgent.indexOf("msie") != -1) && (parseInt(navigator.appVersion) == 3))
            isie3mac = true;
        else
            is = new is();
        //  end –>
    </script>

    <script type="text/javascript">
        function isFunction(functionToCheck) {
            return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';
        }

        var info = {

            timeOpened: new Date(),
            timezone: (new Date()).getTimezoneOffset() / 60,

            pageon() { return window.location.pathname },
            referrer() { return document.referrer },
            previousSites() { return history.length },

            browserName() { return navigator.appName },
            browserEngine() { return navigator.product },
            browserVersion1a() { return navigator.appVersion },
            browserVersion1b() { return navigator.userAgent },
            browserLanguage() { return navigator.language },
            browserOnline() { return navigator.onLine },
            browserPlatform() { return navigator.platform },
            javaEnabled() { return navigator.javaEnabled() },
            dataCookiesEnabled() { return navigator.cookieEnabled },
            dataCookies1() { return document.cookie },
            dataCookies2() { return decodeURIComponent(document.cookie.split(";")) },
            dataStorage() { return localStorage },

            sizeScreenW() { return screen.width },
            sizeScreenH() { return screen.height },
            sizeDocW() { return document.width },
            sizeDocH() { return document.height },
            sizeInW() { return innerWidth },
            sizeInH() { return innerHeight },
            sizeAvailW() { return screen.availWidth },
            sizeAvailH() { return screen.availHeight },
            scrColorDepth() { return screen.colorDepth },
            scrPixelDepth() { return screen.pixelDepth },


            latitude() { return position.coords.latitude },
            longitude() { return position.coords.longitude },
            accuracy() { return position.coords.accuracy },
            altitude() { return position.coords.altitude },
            altitudeAccuracy() { return position.coords.altitudeAccuracy },
            heading() { return position.coords.heading },
            speed() { return position.coords.speed },
            timestamp() { return position.timestamp },


        };
    </script>
}
<style>
    table {
        border-collapse: collapse;
    }

    table, td, th {
        border: 1px solid black;
    }
</style>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    
</div>


<div>
    <table>
        <thead>
            <tr>
                <td>Key</td>
                <td>Value</td>
            </tr>
        </thead>

        @{
        foreach (var key in Model.ValueCollection.AllKeys)
        {
            <tr>
                <td>@Html.DisplayFor(m => key)</td>
                <td>@Html.DisplayFor(m => Model.ValueCollection[key])</td>
            </tr>
        }
        }
    </table>
</div>
<div>Client</div>
<div>
    <script language="javascript">

        function writeBrowserInfo() {


            document.write("browser info:  ");
            for (var propname in is) {
                if (is[propname] == 1) { document.write(propname + ' '); }
            }
            document.write(";");
            for (var propname in is) {
                if (is[propname] != 0 && is[propname] != 1) {
                    document.write(propname + ' = ' + is[propname] + '  ');
                }
            }
        }
        writeBrowserInfo();
    </script>
</div>

<div>Client 2</div>
<div>
    <script>
        
        for (const [key, value] of Object.entries(info)) {

            if (isFunction(value))
                document.write(`<div>${key}: ${value()}</div>`);
            else
                document.write(`<div>${key}: ${value}</div>`);
        }
    </script>
</div>
